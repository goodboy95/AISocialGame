# Generated by Django 5.2.7 on 2025-10-06 13:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("gamecore", "0004_alter_gamesession_options_gamesession_deadline_at_and_more"),
        ("rooms", "0005_roomplayer_ai_style"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalyticsSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("opted_in", models.BooleanField(default=True)),
                ("preferences", models.JSONField(blank=True, default=dict)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_subscription",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "战绩订阅",
                "verbose_name_plural": "战绩订阅",
            },
        ),
        migrations.CreateModel(
            name="GameRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("engine", models.CharField(max_length=64)),
                ("status", models.CharField(max_length=16)),
                ("started_at", models.DateTimeField()),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                ("winner", models.CharField(blank=True, max_length=64)),
                ("configuration", models.JSONField(blank=True, default=dict)),
                ("replay_blob", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_records",
                        to="rooms.room",
                    ),
                ),
                (
                    "session",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_record",
                        to="gamecore.gamesession",
                    ),
                ),
            ],
            options={
                "verbose_name": "对局记录",
                "verbose_name_plural": "对局记录",
                "ordering": ("-started_at",),
            },
        ),
        migrations.CreateModel(
            name="RoundEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("turn", models.PositiveIntegerField(default=1)),
                ("phase", models.CharField(max_length=32)),
                ("event_type", models.CharField(max_length=64)),
                ("actor_id", models.IntegerField(blank=True, null=True)),
                ("payload", models.JSONField(blank=True, default=dict)),
                ("duration", models.FloatField(blank=True, null=True)),
                ("occurred_at", models.DateTimeField(auto_now_add=True)),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="analytics.gamerecord",
                    ),
                ),
            ],
            options={
                "verbose_name": "阶段事件",
                "verbose_name_plural": "阶段事件",
                "ordering": ("occurred_at",),
            },
        ),
        migrations.CreateModel(
            name="PlayerResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("player_id", models.IntegerField()),
                ("display_name", models.CharField(max_length=120)),
                ("role", models.CharField(blank=True, max_length=64)),
                ("is_ai", models.BooleanField(default=False)),
                ("ai_style", models.CharField(blank=True, max_length=64)),
                ("survived", models.BooleanField(default=True)),
                ("outcome", models.CharField(blank=True, max_length=32)),
                ("default_actions", models.PositiveIntegerField(default=0)),
                ("extra", models.JSONField(blank=True, default=dict)),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_results",
                        to="analytics.gamerecord",
                    ),
                ),
            ],
            options={
                "verbose_name": "玩家战绩",
                "verbose_name_plural": "玩家战绩",
                "ordering": ("display_name",),
                "indexes": [
                    models.Index(
                        fields=["player_id", "record"],
                        name="analytics_p_player__1a2839_idx",
                    ),
                    models.Index(
                        fields=["record", "outcome"],
                        name="analytics_p_record__ea258b_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PrivateMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("channel", models.CharField(default="private", max_length=32)),
                ("payload", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_messages",
                        to="analytics.gamerecord",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_messages",
                        to="rooms.room",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_private_messages",
                        to="rooms.roomplayer",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="private_messages",
                        to="gamecore.gamesession",
                    ),
                ),
                (
                    "target_player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_private_messages",
                        to="rooms.roomplayer",
                    ),
                ),
            ],
            options={
                "verbose_name": "私聊消息",
                "verbose_name_plural": "私聊消息",
                "ordering": ("created_at",),
                "indexes": [
                    models.Index(
                        fields=["session", "channel"],
                        name="analytics_p_session_2c20b7_idx",
                    ),
                    models.Index(
                        fields=["room", "created_at"],
                        name="analytics_p_room_id_37317e_idx",
                    ),
                ],
            },
        ),
    ]
